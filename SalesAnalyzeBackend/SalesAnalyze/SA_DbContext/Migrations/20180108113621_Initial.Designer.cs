// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SA_DbContext;
using System;

namespace SA_DbContext.Migrations
{
    [DbContext(typeof(SADbContext))]
    [Migration("20180108113621_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SA_Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("SaleChannelId");

                    b.HasKey("Id");

                    b.HasIndex("SaleChannelId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SA_Models.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("EndDate");

                    b.Property<int>("ProductId");

                    b.Property<DateTime?>("StartDate");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("SA_Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("ProductTypeId");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Prodcts");
                });

            modelBuilder.Entity("SA_Models.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("SA_Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<int>("ProductId");

                    b.Property<int>("SalePointId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SalePointId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("SA_Models.SaleChannel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("SaleChannels");
                });

            modelBuilder.Entity("SA_Models.SaleManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("SaleManagers");
                });

            modelBuilder.Entity("SA_Models.SalePoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<int>("CustomerId");

                    b.Property<int>("SaleManagerId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SaleManagerId");

                    b.ToTable("SalePoints");
                });

            modelBuilder.Entity("SA_Models.Customer", b =>
                {
                    b.HasOne("SA_Models.SaleChannel", "SaleChannel")
                        .WithMany("Customers")
                        .HasForeignKey("SaleChannelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SA_Models.Price", b =>
                {
                    b.HasOne("SA_Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SA_Models.Product", b =>
                {
                    b.HasOne("SA_Models.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SA_Models.Sale", b =>
                {
                    b.HasOne("SA_Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SA_Models.SalePoint", "SalePoint")
                        .WithMany()
                        .HasForeignKey("SalePointId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SA_Models.SalePoint", b =>
                {
                    b.HasOne("SA_Models.Customer", "Customer")
                        .WithMany("SalePoints")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SA_Models.SaleManager", "SaleManager")
                        .WithMany("SalePoints")
                        .HasForeignKey("SaleManagerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
